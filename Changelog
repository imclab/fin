intended v0.2.1
+ bug fix: models with circular properties would cause infinite loops at instantiation time (fixed using getters).
+ fin models will no longer work in IE6/7 since they do not support getters :(

v0.2.0
+ first version of fin models! Yay ORM
+ Use latest version 0.1.5 of browser-require
+ Changes to client-side api:
	- Change list operation names: "append" and "prepend" are now "push" and "unshift"
	- API methods can now take arrays as property names in addition to dotted string, e.g. "user.name" == ['user','name']
	- The local and global IDs are now 0 and -1 respectively, rather than "GLOBAL" and "LOCAL".
	- Added a bunch of runtime checks to assure that IDs are always numeric

v0.1.1
+ Use latest version 0.1.3 of browser-require
+ Allow for chaining "on" of the server-side fin API - fin.on(...).on(...)

v0.1.0
+ First versioned version of fin
+ There are two APIs: api/client.js and api/server.js
+ Engines are completely decoupled and split between pubsub and storage
+ Redis and development (node in-memory) engines exist for pubsub and storage

TODO
- move the chaining of observations to the server
- don't require create to be called explicitly for new models - add another params to suppress creation
- upgrade to latest socket.io
- upgrade to latest node
- document models in README.md
- bake observeList and observeSet together, and (maybe) bake them together with observe as well
- implement List unshift, pop, shift
- add Set, implement add, remove, has
- use model schema server-side as well, to validate item creations and mutations
- on connect, send a sha1 sum of the schema to the server, to ensure they use the same one
- check that instanceProperties fullfill "type" & "required" in modelProperties
- check that each instance property is present in modelProperties when created
- engines
	- couchdb storage engine
	- mysql storage engine?
	- 0mq pubsub engine
- think about how we can add search...
