intended v0.3.0
+ fin transactions - item mutations and creations can be done atomically

v0.2.0
+ first version of fin models! Yay ORM
+ Use latest version 0.1.5 of browser-require
+ Changes to client-side api:
	- Change list operation names: "append" and "prepend" are now "push" and "unshift"
	- API methods can now take arrays as property names in addition to dotted string, e.g. "user.name" == ['user','name']
	- The local and global IDs are now 0 and -1 respectively, rather than "GLOBAL" and "LOCAL".
	- Added a bunch of runtime checks to assure that IDs are always numeric

v0.1.1
+ Use latest version 0.1.3 of browser-require
+ Allow for chaining "on" of the server-side fin API - fin.on(...).on(...)

v0.1.0
+ First versioned version of fin
+ There are two APIs: api/client.js and api/server.js
+ Engines are completely decoupled and split between pubsub and storage
+ Redis and development (node in-memory) engines exist for pubsub and storage

TODO
- client API
	- bake observeList and observeSet together, and (maybe) bake them together with observe as well
	- move the chaining of observations to the server
	- make fin.transact work for create - will require full server-side execution as well as temporary "uncreated" model object IDs
		- CustomModel#create - grab a transactionHold and resume/complete around _createInDatabase()
		- api/client.js - make the 'create' requestResponse transactionSensitive
- models
	- add "static" descriptor for text and number properties. Static properties won't be observed; only a snapshot will be requested
	- implement List unshift, pop, shift
	- add Set, implement add, remove, has
	- document models in README.md
	- check that instanceProperties fullfill "type" & "required" in modelProperties
	- check that each instance property is present in modelProperties when created
	- don't require create to be called explicitly for new models - add another params to suppress creation
- engines
	- couchdb storage engine
	- mysql storage engine?
	- 0mq pubsub engine
- upgrade to latest socket.io
- upgrade to latest node
- think about how we can add search...
